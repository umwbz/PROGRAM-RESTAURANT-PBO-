import java.util.ArrayList;
import java.util.List;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.Scanner;

public class Restaurant {
 // Data restaurant
    static List<Restaurant> restaurantList = new ArrayList<>();
 // Data Order  
    private static List<Order> orderList = new ArrayList<>();
    
       class Restaurant {
        private String name;
        private String address;
        private Menu menu;

        public Restaurant(String name, String address, Menu menu) {
            this.name = name;
            this.address = address;
            this.menu = menu;
        }

        public String getName() {
            return name;
        }

        public String getAddress() {
            return address;
        }

        public Menu getMenu() {
            return menu;
        }
    }

    class Menu {
        private Map<String, Double> foods;
        private Map<String, Double> drinks;

        public Menu(Map<String, Double> foods, Map<String, Double> drinks) {
            this.foods = foods;
            this.drinks = drinks;
        }

        public Map<String, Double> getFoods() {
            return foods;
        }

        public Map<String, Double> getDrinks() {
            return drinks;
        }
    }
  class Order {
        private int restaurantId;
        private int menuId;
        private int quantity;
        private double distance;
        private double deliveryFee;

        public Order(int restaurantId, int menuId, int quantity, double distance, double deliveryFee) {
            this.restaurantId = restaurantId;
            this.menuId = menuId;
            this.quantity = quantity;
            this.distance = distance;
            this.deliveryFee = deliveryFee;
        }

        public int getRestaurantId() {
            return restaurantId;
        }

        public int getMenuId() {
            return menuId;
        }

        public int getQuantity() {
            return quantity;
        }

        public double getDistance() {
            return distance;
        }

        public double getDeliveryFee() {
            return deliveryFee;
        }
    }

    public static void main(String[] args) {
        // Hardcoded login credential
        String adminUsername = "admin";
        String adminPassword = "admin7";
        
        
         // Main menu
        Scanner scanner = new Scanner(System.in);
        String userInput = "";
        while (!userInput.equals("exit")) {
            System.out.println("Welcome to Restaurant Program!");
            System.out.println("1. Login as admin");
            System.out.println("2. Login as customer");
            System.out.println("exit. Exit program");
            System.out.print("Please enter your choice: ");
            userInput = scanner.nextLine();
            
        // Main menu
        Scanner scanner = new Scanner(System.in);
        String userInput = "";
        while (!userInput.equals("exit")) {
            System.out.println("Welcome to Restaurant Program!");
            System.out.println("1. Login as admin");
            System.out.println("2. Login as customer");
            System.out.println("exit. Exit program");
            System.out.print("Please enter your choice: ");
            userInput = scanner.nextLine();

            switch (userInput) {
                case "1":
                    // Admin menu
                    System.out.print("Username: ");
                    String adminUsernameInput = scanner.nextLine();
                    System.out.print("Password: ");
                    String adminPasswordInput = scanner.nextLine();

                    if (adminUsernameInput.equals(adminUsername) && adminPasswordInput.equals(adminPassword)) {
                        adminMenu(scanner);
                    } else {
                        System.out.println("Invalid username or password. Please try again.");
                    }
                    break;

                case "2":
                    // Customer menu
                    customerMenu(scanner);
                    break;

                case "exit":
                    System.out.println("Thank you for using Restaurant Program!");
                    break;

                default:
                    System.out.println("Invalid input. Please try again.");
            }
        }
    }

    // Admin menu
    public static void adminMenu(Scanner scanner) {
        String userInput = "";
        while (!userInput.equals("4")) {
            System.out.println("\nAdmin Menu");
            System.out.println("1. View Restaurants");
            System.out.println("2. Add Restaurant");
            System.out.println("3. Delete Restaurant");
            System.out.println("4. Back to Login");
            System.out.print("Please enter your choice: ");
            userInput = scanner.nextLine();

            switch (userInput) {
                case "1":
                    viewRestaurants();
                    break;

                case "2":
                    Main instance = new Main();
                    instance.addRestaurant(scanner);
                    break;

                case "3":
                    deleteRestaurant(scanner);
                    break;

                case "4":
                    System.out.println("Logging out of admin account...");
                    break;

                default:
                    System.out.println("Invalid input. Please try again.");
            }
        }
    }

    // Customer menu
    public static void customerMenu(Scanner scanner) {
        String userInput = "";
        while (!userInput.equals("4")) {
            System.out.println("\nCustomer Menu");
            System.out.println("1. View Restaurants");
            System.out.println("2. Place Order");
            System.out.println("3. View Order History");
            System.out.println("4. Back to Login");
            System.out.print("Please enter your choice: ");
            userInput = scanner.nextLine();

            switch (userInput) {
                case "1":
                    viewRestaurants();
                    break;

                case "2":
                    Main instance = new Main();
                    instance.placeOrder();
                    break;
                case "3":
                    viewOrder();
                    break;
                case "4":
                    System.out.println("Logging out of customer account...");
                    break;

                default:
                    System.out.println("Invalid input. Please try again.");
            }
        }
    }
    public static void viewRestaurants() {
        // Print a list of all restaurants in the system
        System.out.println("List of Restaurants:");
        for (int i = 0; i < restaurantList.size(); i++) {
            Restaurant restaurant = restaurantList.get(i);
            System.out.println((i + 1) + ". " + restaurant.getName() + " - " + restaurant.getAddress());
        }
    }
 public void addRestaurant(Scanner scanner) {
        // Prompt user for restaurant details
        System.out.print("Enter restaurant name: ");
        String name = scanner.nextLine();
        System.out.print("Enter restaurant address: ");
        String address = scanner.nextLine();

        // Create empty menu
        Map<String, Double> foods = new HashMap<>();
        Map<String, Double> drinks = new HashMap<>();
        Menu menu = new Menu(foods, drinks);

        // Create new restaurant object
        Restaurant restaurant = new Restaurant(name, address, menu);

        // Add restaurant to list
        restaurantList.add(restaurant);

        // Confirmation message
        System.out.println("Restaurant added successfully!");
    }


    public static void deleteRestaurant(Scanner scanner) {
        System.out.print("Enter index of restaurant to delete: ");
        int index = Integer.parseInt(scanner.nextLine()) - 1;
        if (index >= 0 && index < restaurantList.size()) {
            restaurantList.remove(index);
            System.out.println("Restaurant deleted.");
        } else {
            System.out.println("Invalid index. Please try again.");
        }
    }

  public  void placeOrder() {
        Scanner scanner = new Scanner(System.in);
        // Prompt user for order details
        System.out.println("Place Order");
        System.out.print("Enter restaurant number: ");
        int restaurantId = scanner.nextInt();
        scanner.nextLine(); // Consume newline left-over
        Restaurant restaurant = restaurantList.get(restaurantId - 1);
        System.out.println("You are ordering from " + restaurant.getName() + ", located at " + restaurant.getAddress());

        System.out.println("Menu:");
        Menu menu = restaurant.getMenu();
        System.out.println("Foods:");
        int foodId = 1;
        for (String foodName : menu.getFoods().keySet()) {
            double foodPrice = menu.getFoods().get(foodName);
            System.out.println(foodId + ". " + foodName + " - $" + foodPrice);
            foodId++;
        }
        System.out.println("Drinks:");
        int drinkId = 1;
        for (String drinkName : menu.getDrinks().keySet()) {
            double drinkPrice = menu.getDrinks().get(drinkName);
            System.out.println(drinkId + ". " + drinkName + " - $" + drinkPrice);
            drinkId++;
        }

        System.out.print("Enter menu item number: ");
        int menuId = scanner.nextInt();
        scanner.nextLine(); // Consume newline left-over
        System.out.print("Enter quantity: ");
        int quantity = scanner.nextInt();
        scanner.nextLine(); // Consume newline left-over
        System.out.print("Enter delivery distance (km): ");
        double distance = scanner.nextDouble();
        scanner.nextLine(); // Consume newline left-over
        System.out.print("Enter delivery fee: ");
        double deliveryFee = scanner.nextDouble();
        scanner.nextLine(); // Consume newline left-over

        // Create order object and save to database
        Order order = new Order(restaurantId, menuId, quantity, distance, deliveryFee);
        // TODO: Save order object to the database

        System.out.println("Order placed successfully!");
    }

    public static void viewOrder() {
        // Print a list of all orders made by the customer
        System.out.println("List of Orders:");
        for (int i = 0; i < orderList.size(); i++) {
            Order order = orderList.get(i);
            Restaurant restaurant = restaurantList.get(order.getRestaurantId() - 1);
            Menu menu = restaurant.getMenu();
            Map<String, Double> foods = menu.getFoods();
            Map<String, Double> drinks = menu.getDrinks();
            String foodName = "";
            String drinkName = "";
            for (String name : foods.keySet()) {
                if (foods.get(name).equals(order.getMenuId())) {
                    foodName = name;
                }
            }
            for (String name : drinks.keySet()) {
                if (drinks.get(name).equals(order.getMenuId())) {
                    drinkName = name;
                }
            }
            System.out.println((i + 1) + ". " + restaurant.getName() + " - " + restaurant.getAddress());
            System.out.println("   Menu: " + foodName + " / " + drinkName);
            System.out.println("   Quantity: " + order.getQuantity());
            System.out.println("   Distance: " + order.getDistance() + " km");
            System.out.println("   Delivery fee: $" + order.getDeliveryFee());
        }
    }

}

